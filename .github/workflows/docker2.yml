---
name: push image
on:
  pull_request:
    branches:
      - master
    paths:
      - ubuntu/jammy/Dockerfile
      - ubuntu/focal/DockerFile
      - ubuntu/bionic/DockerFile
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{matrix.os}}
    continue-on-error: true
    strategy:
      matrix:
        build-os:
          # - xenial
          - bionic
          - focal
          - jammy
        os:
          - ubuntu-22.04
    steps:
      - 
        name: checkout
        uses: actions/checkout@v3.3.0
      - 
        name: lint dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile:  "ubuntu/${{matrix.build-os}}/Dockerfile"
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1
        id: buildx
      -
        name: Cache Docker layers
        uses: actions/cache@v3.2.5
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2.1.0 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # -
      #   name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2.0.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: base_meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/docker-ubuntu-ansible
          flavor: |
            latest=false
          tags: |
            type=raw,value=${{matrix.build-os}}
            type=raw,prefix=${{matrix.build-os}}-,value={{date 'YYYYMMDD'}}
      -
        # this will build the amd64 image
        name: Docker Build
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          file: ubuntu/${{matrix.build-os}}/Dockerfile
          push: false
          tags: ${{ steps.base_meta.outputs.tags }}
          labels: ${{ steps.base_meta.outputs.labels }}
          load: true
      - 
        name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ' ${{ secrets.DOCKERHUB_USERNAME }}/docker-ubuntu-ansible:${{matrix.build-os}}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
      - 
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      -
        # this will push the amd64 image
        name: Docker Build
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/amd64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          file: ubuntu/${{matrix.build-os}}/Dockerfile
          push: ${{ github.event_name != 'pull_request'}}
          tags: ${{ steps.base_meta.outputs.tags }}
          labels: ${{ steps.base_meta.outputs.labels }}
      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache